#!/bin/bash

echo -e "\nThis is an installation/update script generated by nebulder (https://github.com/erykjj/nebulder)\nfor automating the deployment of a Nebula network device under Linux with systemd\n"

if [ "$(id -u)" != "0" ]; then
 echo -e "* Because of the high-level access required to execute these commands,\n  this script needs to be run a root\n"
 exit 1
fi

if [[ ! -x "nebula" ]]; then
  if [[ ! -x "/usr/bin/nebula" ]]; then 
    echo -e "* nebula binary not found in /usr/bin!\n  Ensure you download the latest nebula binary  from https://github.com/slackhq/nebula/releases/latest\n"
    exit 1
  fi
fi

# for renewal/redeployment: remove previous keys/config - if any
if [[ -d "/etc/nebula/@@tun_device@@" ]]; then
  echo "* Cleaning up previous settings"
  systemctl stop nebula_@@tun_device@@.service
  echo "  Service stopped"
  systemctl disable nebula_@@tun_device@@.service > /dev/null 2>&1
  rm /etc/systemd/system/nebula_@@tun_device@@.service
  rm -rf /etc/nebula/@@tun_device@@
  echo -e "  Previous key/config files removed\n"
else
  echo -e "* Creating 'nebula' user for binary and key/config file access\n"
  useradd -rM nebula > /dev/null 2>&1
fi

if [[ -x "nebula" ]]; then
  echo -e "* Copying nebula binary to /usr/bin"
  cp nebula /usr/bin/nebula
fi
chown nebula:nebula /usr/bin/nebula
chmod 770 /usr/bin/nebula
setcap cap_net_admin=+pe /usr/bin/nebula
echo -e "  Set permissions on nebula binary\n"

echo "* Putting key/config files in /etc/nebula/@@tun_device@@"
mkdir -p /etc/nebula/@@tun_device@@
cp -t /etc/nebula/@@tun_device@@ host.* ca.crt config.yaml
echo "  Files copied"
chown -R nebula:nebula /etc/nebula/@@tun_device@@
chmod 600 /etc/nebula/@@tun_device@@/*
chmod 644 /etc/nebula/@@tun_device@@/config.yaml
echo -e "  Permissions changed to rw------- (600)\n"

echo "* Setting up systemd: /etc/systemd/system/nebula_@@tun_device@@.service"
cp nebula_@@tun_device@@.service /etc/systemd/system/
systemctl daemon-reload
systemctl enable nebula_@@tun_device@@.service > /dev/null 2>&1
echo "  Service enabled"
systemctl start nebula_@@tun_device@@.service
echo "  Service started"
echo -e "  Check status with 'systemctl status nebula_@@tun_device@@.service'\n"

echo "* If the device is a lighthouse, you may also need to add a rule to your firewall"
echo "  to allow traffic to the @@tun_device@@ network device port. Example:"
echo "  # sudo ufw allow 4242/udp"
echo -e "  # sudo ufw reload\n"

echo -e "Done. If there were no errors, you can remove this script and the other files\n"

exit 0